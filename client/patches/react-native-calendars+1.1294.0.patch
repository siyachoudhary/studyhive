diff --git a/node_modules/react-native-calendars/src/agenda/.index.js.swp b/node_modules/react-native-calendars/src/agenda/.index.js.swp
new file mode 100644
index 0000000..66e1ee5
Binary files /dev/null and b/node_modules/react-native-calendars/src/agenda/.index.js.swp differ
diff --git a/node_modules/react-native-calendars/src/agenda/index.js b/node_modules/react-native-calendars/src/agenda/index.js
index 184c829..3945663 100644
--- a/node_modules/react-native-calendars/src/agenda/index.js
+++ b/node_modules/react-native-calendars/src/agenda/index.js
@@ -15,7 +15,8 @@ import styleConstructor from './style';
 import WeekDaysNames from '../commons/WeekDaysNames';
 import CalendarList from '../calendar-list';
 import ReservationList from './reservation-list';
-const HEADER_HEIGHT = 104;
+//changed header height
+const HEADER_HEIGHT = 129;
 const KNOB_HEIGHT = 24;
 /**
  * @description: Agenda component
@@ -48,6 +49,9 @@ export default class Agenda extends Component {
     currentMonth;
     knobTracker;
     _isMounted;
+
+    navigationSubscription;
+
     scrollPad = React.createRef();
     calendar = React.createRef();
     knob = React.createRef();
@@ -75,16 +79,29 @@ export default class Agenda extends Component {
     componentDidMount() {
         this._isMounted = true;
         this.loadReservations(this.props);
+        // this.navigationSubscription = this.props.navigation.addListener('didFocus', this.onFocus);
     }
     componentWillUnmount() {
         this._isMounted = false;
-        this.state.scrollY.removeAllListeners();
+        // this.state.scrollY.removeAllListeners();
+        // this.navigationSubscription.remove();
     }
+
+    // onFocus = (payload) => {
+    //     console.log(payload);
+    //     // You can then check for updates here
+    // }
+
     componentDidUpdate(prevProps, prevState) {
         const newSelectedDate = this.getSelectedDate(this.props.selected);
         if (!sameDate(newSelectedDate, prevState.selectedDay)) {
+            console.log('updated bitch')
             const prevSelectedDate = this.getSelectedDate(prevProps.selected);
+            // console.log(newSelectedDate)
+            // console.log(prevSelectedDate)
+            // console.log(prevState.selectedDay)
             if (!sameDate(newSelectedDate, prevSelectedDate)) {
+                console.log('updated bitch 2')
                 this.setState({ selectedDay: newSelectedDate });
                 this.calendar?.current?.scrollToDay(newSelectedDate, this.calendarOffset(), true);
             }
@@ -140,6 +157,7 @@ export default class Agenda extends Component {
             this.setState({ firstReservationLoad: true }, () => {
                 this.props.loadItemsForMonth?.(xdateToData(this.state.selectedDay));
             });
+            console.log('running2')
         }
     }
     onDayPress = (d) => {
@@ -170,6 +188,14 @@ export default class Agenda extends Component {
                     }
                 });
             }
+        } else {
+            if (items) {
+                Object.keys(items).forEach(key => {
+                    if (items[key] && items[key].length) {
+                        markedDates[key] = { marked: true };
+                    }
+                });
+            }
         }
         const key = toMarkingFormat(selectedDay);
         return { ...markedDates, [key]: { ...(markedDates[key] || {}), ...{ selected: true } } };
@@ -231,6 +257,7 @@ export default class Agenda extends Component {
         }
     };
     onDayChange = (day) => {
+        // console.log('day changed')
         const withAnimation = sameMonth(day, this.state.selectedDay);
         this.calendar?.current?.scrollToDay(day, this.calendarOffset(), withAnimation);
         this.setState({ selectedDay: day });
diff --git a/node_modules/react-native-calendars/src/agenda/platform-style.ios.js b/node_modules/react-native-calendars/src/agenda/platform-style.ios.js
index 541f3a5..d257488 100644
--- a/node_modules/react-native-calendars/src/agenda/platform-style.ios.js
+++ b/node_modules/react-native-calendars/src/agenda/platform-style.ios.js
@@ -17,7 +17,8 @@ export default function platformStyles(appStyle) {
             marginLeft: 15,
             marginRight: 15,
             paddingTop: 15,
-            paddingBottom: 7,
+            //changed padding bottom
+            paddingBottom: 10,
             backgroundColor: appStyle.calendarBackground
         }
     };
diff --git a/node_modules/react-native-calendars/src/agenda/reservation-list/index.js b/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
index 3917729..8c84dc6 100644
--- a/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
+++ b/node_modules/react-native-calendars/src/agenda/reservation-list/index.js
@@ -52,7 +52,9 @@ class ReservationList extends Component {
     }
     componentDidUpdate(prevProps) {
         if (this.props.topDay && prevProps.topDay && prevProps !== this.props) {
-            if (!sameDate(prevProps.topDay, this.props.topDay)) {
+            //I MADE A CHANGE HERE//
+            // if (!sameDate(prevProps.topDay, this.props.topDay)) {
+            if (sameDate(prevProps.topDay, this.props.topDay)) {
                 this.setState({ reservations: [] }, () => this.updateReservations(this.props));
             }
             else {
@@ -66,7 +68,10 @@ class ReservationList extends Component {
     updateReservations(props) {
         const { selectedDay, showOnlySelectedDayItems } = props;
         const reservations = this.getReservations(props);
+
+        // console.log(reservations)
         if (!showOnlySelectedDayItems && this.list && !sameDate(selectedDay, this.selectedDay)) {
+            // console.log('running')
             let scrollPosition = 0;
             for (let i = 0; i < reservations.scrollPosition; i++) {
                 scrollPosition += this.heights[i] || 0;
@@ -74,6 +79,7 @@ class ReservationList extends Component {
             this.scrollOver = false;
             this.list?.current?.scrollToOffset({ offset: scrollPosition, animated: true });
         }
+
         this.selectedDay = selectedDay;
         this.updateDataSource(reservations.reservations);
     }
@@ -123,6 +129,7 @@ class ReservationList extends Component {
         }
         const scrollPosition = reservations.length;
         const iterator = selectedDay.clone();
+        // console.log(iterator)
         if (showOnlySelectedDayItems) {
             const res = this.getReservationsForDay(iterator, props);
             if (res) {
@@ -175,6 +182,7 @@ class ReservationList extends Component {
     };
     renderRow = ({ item, index }) => {
         const reservationProps = extractReservationProps(this.props);
+        // console.log(item.reservation)
         return (<View onLayout={this.onRowLayoutChange.bind(this, index)}>
         <Reservation {...reservationProps} item={item.reservation} date={item.date}/>
       </View>);
@@ -184,12 +192,21 @@ class ReservationList extends Component {
     };
     render() {
         const { items, selectedDay, theme, style } = this.props;
-        if (!items || selectedDay && !items[toMarkingFormat(selectedDay)]) {
-            if (isFunction(this.props.renderEmptyData)) {
-                return this.props.renderEmptyData?.();
+
+        if(this.state.reservations.length == 0){
+            if (isFunction(this.props.renderEmptyDate)) {
+                return this.props.renderEmptyDate?.();
             }
-            return <ActivityIndicator style={this.style.indicator} color={theme?.indicatorColor}/>;
         }
+        // console.log(this.state.reservations)
+        //TOOK THIS OUT
+        // console.log('hello' + !items[toMarkingFormat(selectedDay)])
+        // if (!items || selectedDay && !items[toMarkingFormat(selectedDay)]) {
+        //     if (isFunction(this.props.renderEmptyDate)) {
+        //         return this.props.renderEmptyDate?.();
+        //     }
+        //     return <ActivityIndicator style={this.style.indicator} color={theme?.indicatorColor}/>;
+        // }
         return (<FlatList ref={this.list} style={style} contentContainerStyle={this.style.content} data={this.state.reservations} renderItem={this.renderRow} keyExtractor={this.keyExtractor} showsVerticalScrollIndicator={false} scrollEventThrottle={200} onMoveShouldSetResponderCapture={this.onMoveShouldSetResponderCapture} onScroll={this.onScroll} refreshControl={this.props.refreshControl} refreshing={this.props.refreshing} onRefresh={this.props.onRefresh} onScrollBeginDrag={this.props.onScrollBeginDrag} onScrollEndDrag={this.props.onScrollEndDrag} onMomentumScrollBegin={this.props.onMomentumScrollBegin} onMomentumScrollEnd={this.props.onMomentumScrollEnd}/>);
     }
 }
diff --git a/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js b/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js
index a547421..fc8b28d 100644
--- a/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js
+++ b/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js
@@ -1,3 +1,4 @@
+import { sortedUniq } from 'lodash';
 import isFunction from 'lodash/isFunction';
 import PropTypes from 'prop-types';
 import React, { Component } from 'react';
@@ -23,32 +24,47 @@ class Reservation extends Component {
         super(props);
         this.style = styleConstructor(props.theme);
     }
+
     shouldComponentUpdate(nextProps) {
         const d1 = this.props.date;
         const d2 = nextProps.date;
         const r1 = this.props.item;
         const r2 = nextProps.item;
         let changed = true;
-        if (!d1 && !d2) {
+        // if (!d1 && !d2) {
+        if (this.props.rowHasChanged(r1, r2)) {
+            changed = true;
+        } else if (!d1 && !d2) {
             changed = false;
+            // console.log("1")
         }
         else if (d1 && d2) {
+            // console.log(d1)
+            // console.log('time1: ' + d1.getTime())
+            // console.log(d2)
+            // console.log('time2: ' + d2.getTime())
+
             if (d1.getTime() !== d2.getTime()) {
                 changed = true;
+                // console.log("2")
             }
             else if (!r1 && !r2) {
                 changed = false;
+                // console.log("3")
             }
             else if (r1 && r2) {
                 if ((!d1 && !d2) || (d1 && d2)) {
                     if (isFunction(this.props.rowHasChanged)) {
                         changed = this.props.rowHasChanged(r1, r2);
+                        // console.log("4")
                     }
                 }
             }
         }
+        // console.log('changed:' + changed)
         return changed;
     }
+    
     renderDate(date, item) {
         if (isFunction(this.props.renderDay)) {
             return this.props.renderDay(date, item);
diff --git a/node_modules/react-native-calendars/src/agenda/style.js b/node_modules/react-native-calendars/src/agenda/style.js
index 98261bf..278e103 100644
--- a/node_modules/react-native-calendars/src/agenda/style.js
+++ b/node_modules/react-native-calendars/src/agenda/style.js
@@ -32,6 +32,8 @@ export default function styleConstructor(theme = {}) {
             backgroundColor: appStyle.calendarBackground
         },
         dayHeader: {
+            //added top
+            top: 25,
             width: 32,
             textAlign: 'center',
             fontSize: appStyle.textDayHeaderFontSize,
@@ -41,7 +43,8 @@ export default function styleConstructor(theme = {}) {
         },
         reservations: {
             flex: 1,
-            marginTop: 104,
+            //changed margin top
+            marginTop: 129,
             backgroundColor: appStyle.reservationsBackgroundColor || appStyle.backgroundColor //TODO: remove 2nd in V2
         },
         scrollPadStyle: {
diff --git a/node_modules/react-native-calendars/src/calendar/day/basic/style.js b/node_modules/react-native-calendars/src/calendar/day/basic/style.js
index 11711a0..03b9f93 100644
--- a/node_modules/react-native-calendars/src/calendar/day/basic/style.js
+++ b/node_modules/react-native-calendars/src/calendar/day/basic/style.js
@@ -14,7 +14,7 @@ export default function styleConstructor(theme = {}) {
             alignItems: 'center'
         },
         text: {
-            marginTop: constants.isAndroid ? 4 : 6,
+            marginTop: constants.isAndroid ? 6 : 8,
             fontSize: appStyle.textDayFontSize,
             fontFamily: appStyle.textDayFontFamily,
             fontWeight: appStyle.textDayFontWeight,
@@ -23,7 +23,7 @@ export default function styleConstructor(theme = {}) {
             ...appStyle.textDayStyle
         },
         alignedText: {
-            marginTop: constants.isAndroid ? 4 : 6
+            marginTop: constants.isAndroid ? 6 : 8
         },
         selected: {
             backgroundColor: appStyle.selectedDayBackgroundColor,
